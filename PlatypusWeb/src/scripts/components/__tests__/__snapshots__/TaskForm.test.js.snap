// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TaskForm TaskForm matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": [Function],
      "enableReinitialize": false,
      "initialValues": Object {
        "category": null,
        "deadline": "",
        "description": "",
        "name": "",
        "priority": null,
      },
      "isInitialValid": false,
      "onSubmit": [Function],
      "validateOnBlur": true,
      "validateOnChange": true,
    },
    "ref": null,
    "rendered": [Function],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": [Function],
        "enableReinitialize": false,
        "initialValues": Object {
          "category": null,
          "deadline": "",
          "description": "",
          "name": "",
          "priority": null,
        },
        "isInitialValid": false,
        "onSubmit": [Function],
        "validateOnBlur": true,
        "validateOnChange": true,
      },
      "ref": null,
      "rendered": [Function],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
