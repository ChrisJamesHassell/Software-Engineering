// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Form matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    textInput={
      Object {
        "state": Object {
          "requiresValidation": false,
          "value": "testVal",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "action": "http://localhost:8080/api/user/login",
      "children": Array [
        <FormGroup
          bsClass="form-group"
          controlId="username"
        >
          <InputGroup
            bsClass="input-group"
          >
            <InputGroupAddon
              bsClass="input-group-addon"
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="user"
              />
            </InputGroupAddon>
            <TextInput
              label="User Name"
              maxLength="32"
              name="username"
              placeholder="Enter your user name"
              required={true}
              type="text"
              updateVals={[Function]}
            />
          </InputGroup>
        </FormGroup>,
        <FormGroup
          bsClass="form-group"
          controlId="pass"
        >
          <InputGroup
            bsClass="input-group"
          >
            <InputGroupAddon
              bsClass="input-group-addon"
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="lock"
              />
            </InputGroupAddon>
            <TextInput
              label="Password"
              maxLength="32"
              name="password"
              placeholder="Enter your password"
              required={true}
              type="password"
              updateVals={[Function]}
            />
          </InputGroup>
        </FormGroup>,
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          disabled={true}
          onClick={[Function]}
          style={
            Object {
              "width": "100%",
            }
          }
          type="button"
        >
          Login
        </Button>,
      ],
      "encType": "multipart/form-data",
      "method": "POST",
      "onKeyUp": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form-group",
          "children": <InputGroup
            bsClass="input-group"
          >
            <InputGroupAddon
              bsClass="input-group-addon"
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="user"
              />
            </InputGroupAddon>
            <TextInput
              label="User Name"
              maxLength="32"
              name="username"
              placeholder="Enter your user name"
              required={true}
              type="text"
              updateVals={[Function]}
            />
          </InputGroup>,
          "controlId": "username",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "input-group",
            "children": Array [
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="user"
                />
              </InputGroupAddon>,
              <TextInput
                label="User Name"
                maxLength="32"
                name="username"
                placeholder="Enter your user name"
                required={true}
                type="text"
                updateVals={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "input-group-addon",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="user"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "user",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "label": "User Name",
                "maxLength": "32",
                "name": "username",
                "placeholder": "Enter your user name",
                "required": true,
                "type": "text",
                "updateVals": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "form-group",
          "children": <InputGroup
            bsClass="input-group"
          >
            <InputGroupAddon
              bsClass="input-group-addon"
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="lock"
              />
            </InputGroupAddon>
            <TextInput
              label="Password"
              maxLength="32"
              name="password"
              placeholder="Enter your password"
              required={true}
              type="password"
              updateVals={[Function]}
            />
          </InputGroup>,
          "controlId": "pass",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "input-group",
            "children": Array [
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="lock"
                />
              </InputGroupAddon>,
              <TextInput
                label="Password"
                maxLength="32"
                name="password"
                placeholder="Enter your password"
                required={true}
                type="password"
                updateVals={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "input-group-addon",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="lock"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "lock",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "label": "Password",
                "maxLength": "32",
                "name": "password",
                "placeholder": "Enter your password",
                "required": true,
                "type": "password",
                "updateVals": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "active": false,
          "block": false,
          "bsClass": "btn",
          "bsStyle": "success",
          "children": "Login",
          "disabled": true,
          "onClick": [Function],
          "style": Object {
            "width": "100%",
          },
          "type": "button",
        },
        "ref": null,
        "rendered": "Login",
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "action": "http://localhost:8080/api/user/login",
        "children": Array [
          <FormGroup
            bsClass="form-group"
            controlId="username"
          >
            <InputGroup
              bsClass="input-group"
            >
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="user"
                />
              </InputGroupAddon>
              <TextInput
                label="User Name"
                maxLength="32"
                name="username"
                placeholder="Enter your user name"
                required={true}
                type="text"
                updateVals={[Function]}
              />
            </InputGroup>
          </FormGroup>,
          <FormGroup
            bsClass="form-group"
            controlId="pass"
          >
            <InputGroup
              bsClass="input-group"
            >
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="lock"
                />
              </InputGroupAddon>
              <TextInput
                label="Password"
                maxLength="32"
                name="password"
                placeholder="Enter your password"
                required={true}
                type="password"
                updateVals={[Function]}
              />
            </InputGroup>
          </FormGroup>,
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={true}
            onClick={[Function]}
            style={
              Object {
                "width": "100%",
              }
            }
            type="button"
          >
            Login
          </Button>,
        ],
        "encType": "multipart/form-data",
        "method": "POST",
        "onKeyUp": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": <InputGroup
              bsClass="input-group"
            >
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="user"
                />
              </InputGroupAddon>
              <TextInput
                label="User Name"
                maxLength="32"
                name="username"
                placeholder="Enter your user name"
                required={true}
                type="text"
                updateVals={[Function]}
              />
            </InputGroup>,
            "controlId": "username",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "input-group",
              "children": Array [
                <InputGroupAddon
                  bsClass="input-group-addon"
                >
                  <Glyphicon
                    bsClass="glyphicon"
                    glyph="user"
                  />
                </InputGroupAddon>,
                <TextInput
                  label="User Name"
                  maxLength="32"
                  name="username"
                  placeholder="Enter your user name"
                  required={true}
                  type="text"
                  updateVals={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "input-group-addon",
                  "children": <Glyphicon
                    bsClass="glyphicon"
                    glyph="user"
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "glyphicon",
                    "glyph": "user",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "label": "User Name",
                  "maxLength": "32",
                  "name": "username",
                  "placeholder": "Enter your user name",
                  "required": true,
                  "type": "text",
                  "updateVals": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "form-group",
            "children": <InputGroup
              bsClass="input-group"
            >
              <InputGroupAddon
                bsClass="input-group-addon"
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="lock"
                />
              </InputGroupAddon>
              <TextInput
                label="Password"
                maxLength="32"
                name="password"
                placeholder="Enter your password"
                required={true}
                type="password"
                updateVals={[Function]}
              />
            </InputGroup>,
            "controlId": "pass",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "input-group",
              "children": Array [
                <InputGroupAddon
                  bsClass="input-group-addon"
                >
                  <Glyphicon
                    bsClass="glyphicon"
                    glyph="lock"
                  />
                </InputGroupAddon>,
                <TextInput
                  label="Password"
                  maxLength="32"
                  name="password"
                  placeholder="Enter your password"
                  required={true}
                  type="password"
                  updateVals={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "input-group-addon",
                  "children": <Glyphicon
                    bsClass="glyphicon"
                    glyph="lock"
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "glyphicon",
                    "glyph": "lock",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "label": "Password",
                  "maxLength": "32",
                  "name": "password",
                  "placeholder": "Enter your password",
                  "required": true,
                  "type": "password",
                  "updateVals": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "block": false,
            "bsClass": "btn",
            "bsStyle": "success",
            "children": "Login",
            "disabled": true,
            "onClick": [Function],
            "style": Object {
              "width": "100%",
            },
            "type": "button",
          },
          "ref": null,
          "rendered": "Login",
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
