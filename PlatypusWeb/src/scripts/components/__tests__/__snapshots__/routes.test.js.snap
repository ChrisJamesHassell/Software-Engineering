// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`router snap  matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <routes
    0={
      Object {
        "exact": true,
        "glyph": "dashboard",
        "main": [Function],
        "name": "Dash",
        "path": "/dashboard",
        "sidebar": [Function],
        "type": "home",
      }
    }
    1={
      Object {
        "glyph": "appliances",
        "main": [Function],
        "name": "Appliances",
        "path": "/dashboard/appliances",
        "sidebar": [Function],
        "type": "Category",
      }
    }
    2={
      Object {
        "glyph": "auto",
        "main": [Function],
        "name": "Auto",
        "path": "/dashboard/auto",
        "sidebar": [Function],
        "type": "Category",
      }
    }
    3={
      Object {
        "glyph": "meals",
        "main": [Function],
        "name": "Meals",
        "path": "/dashboard/meals",
        "sidebar": [Function],
        "type": "Category",
      }
    }
    4={
      Object {
        "glyph": "medical",
        "main": [Function],
        "name": "Medical",
        "path": "/dashboard/medical",
        "sidebar": [Function],
        "type": "Category",
      }
    }
    5={
      Object {
        "glyph": "documents",
        "main": [Function],
        "name": "Documents",
        "path": "/dashboard/documents",
        "sidebar": [Function],
        "type": "Actions",
      }
    }
    6={
      Object {
        "glyph": "events",
        "main": [Function],
        "name": "Events",
        "path": "/dashboard/events",
        "sidebar": [Function],
        "type": "Actions",
      }
    }
    7={
      Object {
        "glyph": "tasks",
        "main": [Function],
        "name": "Tasks",
        "path": "/dashboard/tasks",
        "sidebar": [Function],
        "type": "Actions",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "0": Object {
        "exact": true,
        "glyph": "dashboard",
        "main": [Function],
        "name": "Dash",
        "path": "/dashboard",
        "sidebar": [Function],
        "type": "home",
      },
      "1": Object {
        "glyph": "appliances",
        "main": [Function],
        "name": "Appliances",
        "path": "/dashboard/appliances",
        "sidebar": [Function],
        "type": "Category",
      },
      "2": Object {
        "glyph": "auto",
        "main": [Function],
        "name": "Auto",
        "path": "/dashboard/auto",
        "sidebar": [Function],
        "type": "Category",
      },
      "3": Object {
        "glyph": "meals",
        "main": [Function],
        "name": "Meals",
        "path": "/dashboard/meals",
        "sidebar": [Function],
        "type": "Category",
      },
      "4": Object {
        "glyph": "medical",
        "main": [Function],
        "name": "Medical",
        "path": "/dashboard/medical",
        "sidebar": [Function],
        "type": "Category",
      },
      "5": Object {
        "glyph": "documents",
        "main": [Function],
        "name": "Documents",
        "path": "/dashboard/documents",
        "sidebar": [Function],
        "type": "Actions",
      },
      "6": Object {
        "glyph": "events",
        "main": [Function],
        "name": "Events",
        "path": "/dashboard/events",
        "sidebar": [Function],
        "type": "Actions",
      },
      "7": Object {
        "glyph": "tasks",
        "main": [Function],
        "name": "Tasks",
        "path": "/dashboard/tasks",
        "sidebar": [Function],
        "type": "Actions",
      },
    },
    "ref": null,
    "rendered": null,
    "type": "routes",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "0": Object {
          "exact": true,
          "glyph": "dashboard",
          "main": [Function],
          "name": "Dash",
          "path": "/dashboard",
          "sidebar": [Function],
          "type": "home",
        },
        "1": Object {
          "glyph": "appliances",
          "main": [Function],
          "name": "Appliances",
          "path": "/dashboard/appliances",
          "sidebar": [Function],
          "type": "Category",
        },
        "2": Object {
          "glyph": "auto",
          "main": [Function],
          "name": "Auto",
          "path": "/dashboard/auto",
          "sidebar": [Function],
          "type": "Category",
        },
        "3": Object {
          "glyph": "meals",
          "main": [Function],
          "name": "Meals",
          "path": "/dashboard/meals",
          "sidebar": [Function],
          "type": "Category",
        },
        "4": Object {
          "glyph": "medical",
          "main": [Function],
          "name": "Medical",
          "path": "/dashboard/medical",
          "sidebar": [Function],
          "type": "Category",
        },
        "5": Object {
          "glyph": "documents",
          "main": [Function],
          "name": "Documents",
          "path": "/dashboard/documents",
          "sidebar": [Function],
          "type": "Actions",
        },
        "6": Object {
          "glyph": "events",
          "main": [Function],
          "name": "Events",
          "path": "/dashboard/events",
          "sidebar": [Function],
          "type": "Actions",
        },
        "7": Object {
          "glyph": "tasks",
          "main": [Function],
          "name": "Tasks",
          "path": "/dashboard/tasks",
          "sidebar": [Function],
          "type": "Actions",
        },
      },
      "ref": null,
      "rendered": null,
      "type": "routes",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
