// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LeftNavInner matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LeftNavInner
    route={
      Object {
        "path": "/login",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Nav
        bsClass="nav"
        className="left-nav-link"
        justified={false}
        pullLeft={false}
        pullRight={false}
        stacked={false}
      >
        <LinkContainer
          activeClassName="active"
          exact={false}
          replace={false}
          strict={false}
          to="/login"
        >
          <NavItem
            active={false}
            disabled={false}
            eventKey={NaN}
          >
            <NavIcons
              fill="white"
            />
            <b />
          </NavItem>
        </LinkContainer>
        <Route
          path="/login"
        />
      </Nav>,
      "className": "left-nav-container",
      "onMouseOut": [Function],
      "onMouseOver": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bsClass": "nav",
        "children": Array [
          <LinkContainer
            activeClassName="active"
            exact={false}
            replace={false}
            strict={false}
            to="/login"
          >
            <NavItem
              active={false}
              disabled={false}
              eventKey={NaN}
            >
              <NavIcons
                fill="white"
              />
              <b />
            </NavItem>
          </LinkContainer>,
          <Route
            path="/login"
          />,
        ],
        "className": "left-nav-link",
        "justified": false,
        "pullLeft": false,
        "pullRight": false,
        "stacked": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeClassName": "active",
            "children": <NavItem
              active={false}
              disabled={false}
              eventKey={NaN}
            >
              <NavIcons
                fill="white"
              />
              <b />
            </NavItem>,
            "exact": false,
            "replace": false,
            "strict": false,
            "to": "/login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "children": Array [
                <NavIcons
                  fill="white"
                />,
                <b />,
              ],
              "disabled": false,
              "eventKey": NaN,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "fill": "white",
                  "icon": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "b",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": undefined,
            "exact": undefined,
            "path": "/login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Nav
          bsClass="nav"
          className="left-nav-link"
          justified={false}
          pullLeft={false}
          pullRight={false}
          stacked={false}
        >
          <LinkContainer
            activeClassName="active"
            exact={false}
            replace={false}
            strict={false}
            to="/login"
          >
            <NavItem
              active={false}
              disabled={false}
              eventKey={NaN}
            >
              <NavIcons
                fill="white"
              />
              <b />
            </NavItem>
          </LinkContainer>
          <Route
            path="/login"
          />
        </Nav>,
        "className": "left-nav-container",
        "onMouseOut": [Function],
        "onMouseOver": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "nav",
          "children": Array [
            <LinkContainer
              activeClassName="active"
              exact={false}
              replace={false}
              strict={false}
              to="/login"
            >
              <NavItem
                active={false}
                disabled={false}
                eventKey={NaN}
              >
                <NavIcons
                  fill="white"
                />
                <b />
              </NavItem>
            </LinkContainer>,
            <Route
              path="/login"
            />,
          ],
          "className": "left-nav-link",
          "justified": false,
          "pullLeft": false,
          "pullRight": false,
          "stacked": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeClassName": "active",
              "children": <NavItem
                active={false}
                disabled={false}
                eventKey={NaN}
              >
                <NavIcons
                  fill="white"
                />
                <b />
              </NavItem>,
              "exact": false,
              "replace": false,
              "strict": false,
              "to": "/login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "children": Array [
                  <NavIcons
                    fill="white"
                  />,
                  <b />,
                ],
                "disabled": false,
                "eventKey": NaN,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "fill": "white",
                    "icon": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "b",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": undefined,
              "exact": undefined,
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
